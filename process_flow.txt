- printf takes format str and variable args
- create format struct
- print printables
- parse formats/conversions
- parse formats
- populate struct member
- parse conversions
- populate struct member
- dispatch print funcs (pass ap and struct to func)
- return printed bytes



- call printf
	- args (variadic):
		- format str
			- flags, width, precision, length, conversions
		- variables


<ft_printf()>

vars:
- va_list obj to process variable args
- int to store num of printed bytes (ret val of this func)
- ptr to format struct (fstruct)
- int to store format str length

- count format str len
- alloc mem for ptr to fstruct
	- handle errors
- init fstruct
- assign <ptr to format str> to fstruct member
- init arg ptr (ã€€va_start() )
- handle errors ( check format str is not NULL)
- handle errors ( check if format str len is 1 && first elm is % )
- parse format
- va_end
- free malloced mem
- return num of printed bytes


<format parsing>

- <iterate through format str>
	- if current char is not '%'
		- print as it is.
		- update printed bytes member
	- else if current char is '%'
		- if current char doesn't match any of the ALLSYMBOLS
			- break
		- <while current char maches one of the ALLSYMBOLS>
			- update index
			- if current char matches one of the conversions
				- 
		- </while current char maches one of the ALLSYMBOLS>
- </iterate through format str>